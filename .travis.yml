language: c
compiler:
- gcc
- clang
os: linux
dist: bionic
addons:
  apt:
    packages:
    - libfftw3-dev
    - libcunit1-dev
env:
- WINDOW=kaiserbessel PRECISION= BUILD_JULIA=1
- WINDOW=gaussian PRECISION=
- WINDOW=bspline PRECISION=
- WINDOW=sinc PRECISION=
- WINDOW=kaiserbessel PRECISION=--enable-float
- WINDOW=gaussian PRECISION=--enable-float
- WINDOW=bspline PRECISION=--enable-float
- WINDOW=sinc PRECISION=--enable-float
- WINDOW=kaiserbessel PRECISION=--enable-long-double
- WINDOW=gaussian PRECISION=--enable-long-double
- WINDOW=bspline PRECISION=--enable-long-double
- WINDOW=sinc PRECISION=--enable-long-double
matrix:
  include:
    - compiler: gcc
      env: WINDOW=kaiserbessel PRECISION= BUILD_OCTAVE=1
    - compiler: clang
      env: WINDOW=kaiserbessel PRECISION= BUILD_OCTAVE=1
      addons: { apt: { packages: ["libfftw3-dev", "libcunit1-dev", "liboctave-dev"] } }
    - os: osx
      compiler: clang
      env: WINDOW=kaiserbessel PRECISION= 
      install: brew install fftw cunit libomp
    - compiler: gcc
      env: WINDOW=kaiserbessel PRECISION= DIST=distcheck
      addons: { apt: { packages: ["libfftw3-dev", "libcunit1-dev", "doxygen", "doxygen-latex", "graphviz"] } }
    - compiler: clang
      env: WINDOW=kaiserbessel PRECISION= DIST=distcheck
      addons: { apt: { packages: ["libfftw3-dev", "libcunit1-dev", "doxygen", "doxygen-latex", "graphviz"] } }
before_script:
  cat /proc/cpuinfo; 
  if [[ $CC == "clang" ]]; then export LD_LIBRARY_PATH='/usr/local/clang/lib'; fi;
  if [ "$BUILD_OCTAVE" = "1" ]; then
    sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test;
    sudo apt-get update --option Acquire::Retries=10 --option Acquire::http::Timeout="30";
    sudo apt-get install -y libfftw3-dev libcunit1-dev liboctave-dev gcc-10; 
    export CC=gcc-10;
  fi;
  if [ "x$TRAVIS_TAG" != "x" ]; then
    NFFT_TRAVIS_TAG=$(sed -e 's/\([0-9]*\.[0-9]*\.[0-9]*\)\(.*\)/\1.\2/' <<< "$TRAVIS_TAG");
    a=( ${NFFT_TRAVIS_TAG//./ } );
    if [ ${#a[@]} -gt 2 ]; then
      sed -e "s/\(m4_define(\[nfft_version_major\], \[\).*\(\])\)/\1${a[0]}\2/" -e "s/\(m4_define(\[nfft_version_minor\], \[\).*\(\])\)/\1${a[1]}\2/" -e "s/\(m4_define(\[nfft_version_patch\], \[\).*\(\])\)/\1${a[2]}\2/" -e "s/\(m4_define(\[nfft_version_type\], \[\).*\(\])\)/\1${a[3]}\2/" configure.ac > configure.ac.modified;
      mv configure.ac.modified configure.ac;
    fi;
  fi;
script: ./bootstrap.sh && ./configure --with-window=$WINDOW $PRECISION --enable-all --enable-openmp
  $(if test "$BUILD_OCTAVE" = "1"; then echo "--with-octave=/usr"; else echo ""; fi)
  $(if test "$BUILD_JULIA" = "1"; then echo "--enable-julia"; else echo ""; fi)
  && make
  && make check && make $DIST
  && if test "$BUILD_JULIA" = "1"; then wget -q https://julialang-s3.julialang.org/bin/linux/x64/1.3/julia-1.3.1-linux-x86_64.tar.gz && tar -xf julia-*-linux-x86_64.tar.gz && for DIR in julia/nf*t julia/fastsum; do cd $DIR; for NAME in simple_test*.jl; do ./../../julia-1.3.1/bin/julia "$NAME"; done; cd ../..; done; fi
  && if test "$BUILD_OCTAVE" = "1"; then for DIR in matlab/nf*t matlab/fastsum; do cd $DIR; for NAME in simple_test*.m; do octave-cli --eval="run('$NAME')"; done; cd ../..; done; fi
after_failure: cat config.log && cat tests/test-suite.log && if test "$BUILD_OCTAVE" = "1"; then cat matlab/tests/test-suite.log; fi
notifications:
  email: false
before_deploy:
- export NFFT_DISTRO=$(ls *.tar.gz)
- echo "Deploying $NFFT_DISTRO to GitHub releases..."
deploy:
  provider: releases
  prerelease: true
  api_key:
    secure: RzoI1Acp6lZncLnsINrEByZlL2EecIi9IygLFAklyF4YlMWRNhnu+ePW3AovFI7jU8v0H9LmSM0KYi3dIEUpQbQd46IVErihD2dZmICyxqpn1HUrfmpd3EQ1wFBA3wkCmvOWXcN3n8bCDDDV4HX6d/AQtRCp7G6HK+na8fG7JJqkBah50PytU9rcUCHIvzywg6HKQn1rbYOXhDcJs64Ns2F+z5iMlOHA02lRJgmO+5oU3Q2Bhk1V+JypEmMQ8u7zI9/TOVjMzIA0VVz68GiRHBShSRb5VPsGqhWZqqx0shpQqYVd7S9S50AURaqsSGTMmxM3pgWltkx8kUBGwessuX4uB5MdjyZwa1EJV0qIqCVxkxdX925P1zqR/0CBcbwRl9hIB6NytKodraoUbK7B3SaRF64a+l8h5gYBQfhZZEp5itkdvf+hOKQknCPiULS0yhzFLKYTui3h6iVToA2ncYzsesJdcO3vGRFWFyeFPHR/miuWMU4ZVJPKtyEU2A4SBTUIvaDIac1wvNns1fXXHuG7kiCUuZXRHjKQIhIpTahTy5/1RWolt0UlRo/SrKoW0ZDQF8NWwUy/+trdK9Ksr0aZHUo+q0rLSuJO82lJIs3mZpAGuM1a5rtQO9p7aPnuJy7Df4/1xhygig+00Mxw+D4u+HKsvgeJH01cz1rlybE=
  file_glob: true
  file: ${NFFT_DISTRO}
  skip_cleanup: true
  on:
    condition: $DIST = distcheck && $CC = clang
    tags: true
    repo: NFFT/nfft
